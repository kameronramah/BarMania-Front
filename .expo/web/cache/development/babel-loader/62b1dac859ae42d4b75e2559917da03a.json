{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\krama\\\\Documents\\\\EFREI\\\\BarMania\\\\BarMania-\\\\Front-bis\\\\BarMania-Front\\\\app\\\\components\\\\Inscription.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar Inscription = function (_React$Component) {\n  _inherits(Inscription, _React$Component);\n\n  var _super = _createSuper(Inscription);\n\n  function Inscription(props) {\n    var _this;\n\n    _classCallCheck(this, Inscription);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      pseudo: '',\n      nom: '',\n      prenom: '',\n      email: '',\n      mdp: '',\n      cmdp: ''\n    };\n    return _this;\n  }\n\n  _createClass(Inscription, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.pseudo);\n      return React.createElement(View, {\n        style: styles.inscription,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: styles.logo,\n        source: require(\"../../images/logo.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            pseudo: text\n          });\n        },\n        style: styles.textInput,\n        placeholder: \"Pseudo\",\n        underlineColorAndroid: 'transparent',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Nom\",\n        underlineColorAndroid: 'transparent',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Prenom\",\n        underlineColorAndroid: 'transparent',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Email\",\n        underlineColorAndroid: 'transparent',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Mot de passe\",\n        secureTextEntry: true,\n        underlineColorAndroid: 'transparent',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Confirmer mot de passe\",\n        secureTextEntry: true,\n        underlineColorAndroid: 'transparent',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.btnText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, \"INSCRIPTION\")), React.createElement(Text, {\n        style: styles.textConnect,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Connexion');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, \"Connectez-vous\"));\n    }\n  }]);\n\n  return Inscription;\n}(React.Component);\n\nexport default Inscription;\nvar styles = StyleSheet.create({\n  inscription: {\n    backgroundColor: '#73B479'\n  },\n  logo: {\n    width: 250,\n    height: 140,\n    margin: 'auto'\n  },\n  textInput: {\n    backgroundColor: '#73B479',\n    height: 40,\n    width: '70%',\n    marginBottom: 20,\n    color: '#fff',\n    borderBottomColor: 'white',\n    borderBottomWidth: 2,\n    placeholderTextColor: 'white',\n    margin: 'auto'\n  },\n  button: {\n    textAlign: 'center',\n    backgroundColor: 'white',\n    marginTop: 30,\n    width: 150,\n    height: 50,\n    margin: 'auto',\n    padding: 15,\n    borderRadius: 40\n  },\n  btnText: {\n    color: 'black',\n    fontWeight: 'bold'\n  },\n  textConnect: {\n    fontSize: 17,\n    marginTop: 40,\n    color: 'white',\n    textAlign: 'center',\n    textDecorationLine: 'underline',\n    paddingBottom: 30\n  }\n});","map":{"version":3,"sources":["D:/krama/Documents/EFREI/BarMania/BarMania-/Front-bis/BarMania-Front/app/components/Inscription.js"],"names":["React","Inscription","props","state","pseudo","nom","prenom","email","mdp","cmdp","console","log","styles","inscription","logo","require","text","setState","textInput","button","btnText","textConnect","navigation","navigate","Component","StyleSheet","create","backgroundColor","width","height","margin","marginBottom","color","borderBottomColor","borderBottomWidth","placeholderTextColor","textAlign","marginTop","padding","borderRadius","fontWeight","fontSize","textDecorationLine","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    Image,\r\n    StyleSheet\r\n} from 'react-native'\r\n\r\nclass Inscription extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          pseudo: '',\r\n          nom: '',\r\n          prenom: '',\r\n          email: '',\r\n          mdp: '',\r\n          cmdp: ''\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state.pseudo)\r\n        return(\r\n            <View style={styles.inscription}>\r\n                <Image style={styles.logo} source={require('../../images/logo.png')} />\r\n\r\n                <TextInput onChangeText={text => this.setState({ pseudo: text})} style={styles.textInput} placeholder=\"Pseudo\"\r\n                underlineColorAndroid={'transparent'}/>\r\n\r\n                <TextInput style={styles.textInput} placeholder=\"Nom\"\r\n                underlineColorAndroid={'transparent'}/>\r\n\r\n                <TextInput style={styles.textInput} placeholder=\"Prenom\"\r\n                underlineColorAndroid={'transparent'}/>\r\n\r\n                <TextInput style={styles.textInput} placeholder=\"Email\"\r\n                underlineColorAndroid={'transparent'}/>\r\n\r\n                <TextInput style={styles.textInput} placeholder=\"Mot de passe\"\r\n                secureTextEntry={true} underlineColorAndroid={'transparent'}/>\r\n\r\n                <TextInput style={styles.textInput} placeholder=\"Confirmer mot de passe\"\r\n                secureTextEntry={true} underlineColorAndroid={'transparent'}/>\r\n\r\n                <TouchableOpacity style={styles.button}>\r\n                    <Text style={styles.btnText}>INSCRIPTION</Text>\r\n                </TouchableOpacity>\r\n\r\n                <Text style={styles.textConnect} onPress={() =>\r\n                    this.props.navigation.navigate('Connexion')\r\n                }>Connectez-vous</Text> \r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Inscription\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    inscription: {\r\n        backgroundColor: '#73B479'\r\n    },\r\n    logo: {\r\n        width: 250,\r\n        height: 140,\r\n        margin: 'auto'\r\n    },\r\n    textInput: {\r\n        backgroundColor: '#73B479',\r\n        height: 40,\r\n        width: '70%',\r\n        marginBottom: 20,\r\n        color: '#fff',\r\n        borderBottomColor: 'white',\r\n        borderBottomWidth: 2,\r\n        placeholderTextColor: 'white',\r\n        margin: 'auto'\r\n    },\r\n    button: {\r\n        textAlign: 'center',\r\n        backgroundColor: 'white',\r\n        marginTop: 30,\r\n        width: 150,\r\n        height: 50,\r\n        margin: 'auto',\r\n        padding: 15,\r\n        borderRadius: 40\r\n    }, \r\n    btnText: {\r\n        color: 'black',\r\n        fontWeight: 'bold'\r\n    },\r\n    textConnect: {\r\n        fontSize: 17,\r\n        marginTop: 40,\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        textDecorationLine: 'underline',\r\n        paddingBottom: 30\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}