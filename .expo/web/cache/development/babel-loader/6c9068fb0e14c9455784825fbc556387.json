{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\krama\\\\Documents\\\\EFREI\\\\BarMania\\\\BarMania-\\\\Front-bis\\\\BarMania-Front\\\\app\\\\components\\\\links.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useCallback } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nvar supportedURL = \"https://google.com\";\nvar unsupportedURL = \"slack://open?team=123456\";\n\nvar OpenURLButton = function OpenURLButton(_ref) {\n  var url = _ref.url,\n      children = _ref.children;\n  var handlePress = useCallback(function _callee() {\n    var supported;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Linking.canOpenURL(url));\n\n          case 2:\n            supported = _context.sent;\n\n            if (!supported) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(Linking.openURL(url));\n\n          case 6:\n            _context.next = 9;\n            break;\n\n          case 8:\n            Alert.alert(\"Don't know how to open this URL: \" + url);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [url]);\n  return React.createElement(Button, {\n    title: children,\n    onPress: handlePress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  });\n};\n\nvar App = function App() {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(OpenURLButton, {\n    url: supportedURL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Open Supported URL\"), React.createElement(OpenURLButton, {\n    url: unsupportedURL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Open Unsupported URL\"));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nexport default App;","map":{"version":3,"sources":["D:/krama/Documents/EFREI/BarMania/BarMania-/Front-bis/BarMania-Front/app/components/links.js"],"names":["React","useCallback","supportedURL","unsupportedURL","OpenURLButton","url","children","handlePress","Linking","canOpenURL","supported","openURL","Alert","alert","App","styles","container","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;;;;;;AAGA,IAAMC,YAAY,GAAG,oBAArB;AAEA,IAAMC,cAAc,GAAG,0BAAvB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAuB;AAAA,MAApBC,GAAoB,QAApBA,GAAoB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC3C,MAAMC,WAAW,GAAGN,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAENO,OAAO,CAACC,UAAR,CAAmBJ,GAAnB,CAFM;;AAAA;AAExBK,YAAAA,SAFwB;;AAAA,iBAI1BA,SAJ0B;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAOtBF,OAAO,CAACG,OAAR,CAAgBN,GAAhB,CAPsB;;AAAA;AAAA;AAAA;;AAAA;AAS5BO,YAAAA,KAAK,CAACC,KAAN,uCAAgDR,GAAhD;;AAT4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAW5B,CAACA,GAAD,CAX4B,CAA/B;AAaA,SAAO,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,QAAf;AAAyB,IAAA,OAAO,EAAEC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAfD;;AAiBA,IAAMO,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEd,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CADF;AAMD,CAPD;;AASA,IAAMY,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AAAEG,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,cAAc,EAAE,QAA3B;AAAqCC,IAAAA,UAAU,EAAE;AAAjD;AADoB,CAAlB,CAAf;AAIA,eAAeP,GAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { Alert, Button, Linking, StyleSheet, View } from \"react-native\";\r\n\r\nconst supportedURL = \"https://google.com\";\r\n\r\nconst unsupportedURL = \"slack://open?team=123456\";\r\n\r\nconst OpenURLButton = ({ url, children }) => {\r\n  const handlePress = useCallback(async () => {\r\n    // Checking if the link is supported for links with custom URL scheme.\r\n    const supported = await Linking.canOpenURL(url);\r\n\r\n    if (supported) {\r\n      // Opening the link with some app, if the URL scheme is \"http\" the web link should be opened\r\n      // by some browser in the mobile\r\n      await Linking.openURL(url);\r\n    } else {\r\n      Alert.alert(`Don't know how to open this URL: ${url}`);\r\n    }\r\n  }, [url]);\r\n\r\n  return <Button title={children} onPress={handlePress} />;\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <OpenURLButton url={supportedURL}>Open Supported URL</OpenURLButton>\r\n      <OpenURLButton url={unsupportedURL}>Open Unsupported URL</OpenURLButton>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, justifyContent: \"center\", alignItems: \"center\" },\r\n});\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}