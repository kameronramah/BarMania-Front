{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\krama\\\\Documents\\\\EFREI\\\\BarMania\\\\BarMania-\\\\Front-bis\\\\BarMania-Front\\\\app\\\\components\\\\Connexion.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\n\nvar Connexion = function (_React$Component) {\n  _inherits(Connexion, _React$Component);\n\n  var _super = _createSuper(Connexion);\n\n  function Connexion() {\n    _classCallCheck(this, Connexion);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Connexion, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.connexion,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: styles.logo,\n        source: require(\"../../images/logo.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Pseudo\",\n        underlineColorAndroid: 'transparent',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Mot de passe\",\n        secureTextEntry: true,\n        underlineColorAndroid: 'transparent',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.forgetPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, \"Mot de passe oubli\\xE9 ?\"), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.btnText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }\n      }, \"CONNEXION\")), React.createElement(Text, {\n        style: styles.textConnect,\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('Inscription');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, \"Inscrivez-vous\"));\n    }\n  }]);\n\n  return Connexion;\n}(React.Component);\n\nexport default Connexion;\nvar styles = StyleSheet.create({\n  connexion: {\n    backgroundColor: '#73B479'\n  },\n  logo: {\n    width: 250,\n    height: 140,\n    margin: 'auto',\n    marginBottom: 30\n  },\n  textInput: {\n    backgroundColor: '#73B479',\n    height: 40,\n    width: '70%',\n    marginBottom: 40,\n    color: '#fff',\n    borderBottomColor: 'white',\n    borderBottomWidth: 2,\n    placeholderTextColor: 'white',\n    margin: 'auto'\n  },\n  forgetPassword: {\n    textDecorationLine: 'underline',\n    marginLeft: '50%',\n    color: 'white'\n  },\n  button: {\n    textAlign: 'center',\n    backgroundColor: 'white',\n    marginTop: 120,\n    width: 150,\n    height: 50,\n    margin: 'auto',\n    padding: 15,\n    borderRadius: 40\n  },\n  btnText: {\n    color: 'black',\n    fontWeight: 'bold'\n  },\n  textConnect: {\n    fontSize: 17,\n    marginTop: 80,\n    color: 'white',\n    textAlign: 'center',\n    textDecorationLine: 'underline',\n    paddingBottom: 30\n  }\n});","map":{"version":3,"sources":["D:/krama/Documents/EFREI/BarMania/BarMania-/Front-bis/BarMania-Front/app/components/Connexion.js"],"names":["React","Connexion","styles","connexion","logo","require","textInput","forgetPassword","button","btnText","textConnect","props","navigation","navigate","Component","StyleSheet","create","backgroundColor","width","height","margin","marginBottom","color","borderBottomColor","borderBottomWidth","placeholderTextColor","textDecorationLine","marginLeft","textAlign","marginTop","padding","borderRadius","fontWeight","fontSize","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    Image\r\n} from 'react-native';\r\n\r\nclass Connexion extends React.Component {\r\n    render(){\r\n        return(\r\n            <View style={styles.connexion}>\r\n                <Image style={styles.logo} source={require('../../images/logo.png')} />\r\n\r\n                <TextInput style={styles.textInput} placeholder=\"Pseudo\"\r\n                underlineColorAndroid={'transparent'}/>\r\n\r\n                <TextInput style={styles.textInput} placeholder=\"Mot de passe\"\r\n                secureTextEntry={true} underlineColorAndroid={'transparent'}/>\r\n\r\n                <Text style={styles.forgetPassword}>Mot de passe oubli√© ?</Text>\r\n\r\n                <TouchableOpacity style={styles.button}>\r\n                    <Text style={styles.btnText}>CONNEXION</Text>\r\n                </TouchableOpacity>\r\n\r\n                <Text style={styles.textConnect} onPress={() =>\r\n                    this.props.navigation.navigate('Inscription')\r\n                }>Inscrivez-vous</Text> \r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Connexion\r\n\r\nconst styles = StyleSheet.create({\r\n    connexion: {\r\n        backgroundColor: '#73B479'\r\n    },\r\n    logo: {\r\n        width: 250,\r\n        height: 140,\r\n        margin: 'auto',\r\n        marginBottom: 30\r\n    },\r\n    textInput: {\r\n        backgroundColor: '#73B479',\r\n        height: 40,\r\n        width: '70%',\r\n        marginBottom: 40,\r\n        color: '#fff',\r\n        borderBottomColor: 'white',\r\n        borderBottomWidth: 2,\r\n        placeholderTextColor: 'white',\r\n        margin: 'auto'\r\n    },\r\n    forgetPassword: {\r\n        textDecorationLine: 'underline',\r\n        marginLeft: '50%',\r\n        color: 'white'\r\n    },\r\n    button: {\r\n        textAlign: 'center',\r\n        backgroundColor: 'white',\r\n        marginTop: 120,\r\n        width: 150,\r\n        height: 50,\r\n        margin: 'auto',\r\n        padding: 15,\r\n        borderRadius: 40\r\n    }, \r\n    btnText: {\r\n        color: 'black',\r\n        fontWeight: 'bold'\r\n    },\r\n    textConnect: {\r\n        fontSize: 17,\r\n        marginTop: 80,\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        textDecorationLine: 'underline',\r\n        paddingBottom: 30\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}